//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solid.Arduino {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Solid.Arduino.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot convert non-BCD data. ähnelt.
        /// </summary>
        internal static string ArgumentEx_CannotConvertBcd {
            get {
                return ResourceManager.GetString("ArgumentEx_CannotConvertBcd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Channel number must be between 0 and 15. ähnelt.
        /// </summary>
        internal static string ArgumentEx_ChannelRange0_15 {
            get {
                return ResourceManager.GetString("ArgumentEx_ChannelRange0_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die String must contain digits only. ähnelt.
        /// </summary>
        internal static string ArgumentEx_DigitStringOnly {
            get {
                return ResourceManager.GetString("ArgumentEx_DigitStringOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address must be between 0 and 1,023. ähnelt.
        /// </summary>
        internal static string ArgumentEx_I2cAddressRange {
            get {
                return ResourceManager.GetString("ArgumentEx_I2cAddressRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interval must be between 0 and 16,383 milliseconds. ähnelt.
        /// </summary>
        internal static string ArgumentEx_I2cInterval {
            get {
                return ResourceManager.GetString("ArgumentEx_I2cInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum pulse width must be between 0 and 16,383 milliseconds. ähnelt.
        /// </summary>
        internal static string ArgumentEx_MaxPulseWidth {
            get {
                return ResourceManager.GetString("ArgumentEx_MaxPulseWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum pulse width is greater than maximum pulse width. ähnelt.
        /// </summary>
        internal static string ArgumentEx_MinMaxPulse {
            get {
                return ResourceManager.GetString("ArgumentEx_MinMaxPulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum pulse width must be between 0 and 16,383 milliseconds. ähnelt.
        /// </summary>
        internal static string ArgumentEx_MinPulseWidth {
            get {
                return ResourceManager.GetString("ArgumentEx_MinPulseWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value cannot be negative. ähnelt.
        /// </summary>
        internal static string ArgumentEx_NoNegativeValue {
            get {
                return ResourceManager.GetString("ArgumentEx_NoNegativeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die String argument can not be null or empty. ähnelt.
        /// </summary>
        internal static string ArgumentEx_NotNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentEx_NotNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pin number must be between 0 and 127. ähnelt.
        /// </summary>
        internal static string ArgumentEx_PinRange0_127 {
            get {
                return ResourceManager.GetString("ArgumentEx_PinRange0_127", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pin must be between 0 and 7. ähnelt.
        /// </summary>
        internal static string ArgumentEx_PinRange0_7 {
            get {
                return ResourceManager.GetString("ArgumentEx_PinRange0_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port number must be between 0 and 15. ähnelt.
        /// </summary>
        internal static string ArgumentEx_PortRange0_15 {
            get {
                return ResourceManager.GetString("ArgumentEx_PortRange0_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be greater than zero. ähnelt.
        /// </summary>
        internal static string ArgumentEx_PositiveValue {
            get {
                return ResourceManager.GetString("ArgumentEx_PositiveValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sampling interval must be between 0 and 16,383 milliseconds. ähnelt.
        /// </summary>
        internal static string ArgumentEx_SamplingInterval {
            get {
                return ResourceManager.GetString("ArgumentEx_SamplingInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be between 0 and 16,383. ähnelt.
        /// </summary>
        internal static string ArgumentEx_ValueRange0_16383 {
            get {
                return ResourceManager.GetString("ArgumentEx_ValueRange0_16383", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be betwen 0 and 255. ähnelt.
        /// </summary>
        internal static string ArgumentEx_ValueRange0_255 {
            get {
                return ResourceManager.GetString("ArgumentEx_ValueRange0_255", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pin is not supported. ähnelt.
        /// </summary>
        internal static string InvalidOpEx_PinNotSupported {
            get {
                return ResourceManager.GetString("InvalidOpEx_PinNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commandbyte {0:X} is not implemented. ähnelt.
        /// </summary>
        internal static string NotImplementedEx_Command {
            get {
                return ResourceManager.GetString("NotImplementedEx_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The command parsing buffer is full. ähnelt.
        /// </summary>
        internal static string OverflowEx_CmdBufferFull {
            get {
                return ResourceManager.GetString("OverflowEx_CmdBufferFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received message queue is full. ähnelt.
        /// </summary>
        internal static string OverflowEx_MsgBufferFull {
            get {
                return ResourceManager.GetString("OverflowEx_MsgBufferFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The received strings buffer is full. ähnelt.
        /// </summary>
        internal static string OverflowEx_StringBufferFull {
            get {
                return ResourceManager.GetString("OverflowEx_StringBufferFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wait condition for {0} message timed out. ähnelt.
        /// </summary>
        internal static string TimeoutEx_WaitMessage {
            get {
                return ResourceManager.GetString("TimeoutEx_WaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wait condition for string read in {0} mode timed out. ähnelt.
        /// </summary>
        internal static string TimeoutEx_WaitStringRequest {
            get {
                return ResourceManager.GetString("TimeoutEx_WaitStringRequest", resourceCulture);
            }
        }
    }
}
